# this write for apache httpd version
ServerRoot "/etc/apache2"
#Listen 80
Listen 443

Include conf.modules.d/*.conf
IncludeOptional conf.d/*.conf

<IfModule mime_module>
    TypesConfig /etc/mime.types
</IfModule>

DocumentRoot /var/www/html

SSLEngine on # turn on ssl support
SSLCertificateFile /etc/letsencrypt/live/<domain_name>/fullchain.pem # public key
SSLCertificateKeyFile /etc/letsencrypt/live/<domain_name>/privkey.pem # privet key

DirectoryIndex index.html
ErrorLog /var/log/httpd/error_log.log

# for custom error page
ErrorDocument 404 /error_404.html

#---------------------------------------------------------------------------# 
# host multiple web page 

# change config if want multi web page on same server

# below file is httpd.conf in /etc/conf/httpd.conf
ServerRoot "/etc/httpd"
Listen 443

Include conf.modules.d/*.conf
IncludeOptional conf.d/*.conf

<IfModule mime_module>
    TypesConfig /etc/mime.types
</IfModule>


# this file create for clear our code and look good
# cd /etc/conf.d/ 
# sudo touch <domain_name>.conf
# sudo vim <domain_name>.conf

<VirtualHost *:443>
DocumentRoot /var/www/html

SSLEngine on # turn on ssl support
SSLCertificateFile /etc/letsencrypt/live/<domain_name>/fullchain.pem # public key
SSLCertificateKeyFile /etc/letsencrypt/live/<domain_name>/privkey.pem # privet key

DirectoryIndex index.html

# for custom error page
ErrorDocument 404 /error_404.html

# for custom log
ErrorLog /var/log/httpd/error_log
</VirtualHost>

# sudo httpd -t

# sudo systemctl restart httpd

#-------------------------------------------------------------------#
# in /var/www/
# create new folder for our structure is more organize
# mkdir domain_name
# create simple html file
# now change document root in /var/www/<folder_name> in file is previous create file <domain_name>.conf

# create html in /var/www/ making new folder
# go to /etc/httpd/conf/
ServerRoot "/etc/httpd"
Listen 443
Listen 80

Include conf.modules.d/*.conf
IncludeOptional conf.d/*.conf

<IfModule mime_module>
    TypesConfig /etc/mime.types
</IfModule>

# add another port like this

# go to conf.d folder
# create new file for <name>.conf
<VirtualHost *:80>
ServerName mywebpage2.com
ServerAlias www.mywebpage2.com
DocumentRoot /var/www/<new_folder>

DirectoryIndex index.html
# for custom error page
ErrorDocument 404 /error_404.html

# for custom log
ErrorLog /var/log/httpd/site_error.log
Custom /var/log/httpd/site_access.log combined
</VirtualHost>

# go to localhost and it will display second web page

#------------------------------------------------------------------------#

# how to do reverse proxy

# for that we install react app on another server or same server 
# open  /etc/httpd/conf.d/mywebsite2.conf

<VirtualHost *:80>
ServerName mywebpage2.com
ServerAlias www.mywebpage2.com
DocumentRoot /var/www/<new_folder>

DirectoryIndex index.html
# for custom error page
ErrorDocument 404 /error_404.html

ProxyPreserveHost on
ProxyPass / http://<ip>:<port>/
ProxyPassReverse / http://<ip>:<port>/

# for custom log
ErrorLog /var/log/httpd/site_error.log
Custom /var/log/httpd/site_access.log combined
</VirtualHost>

#------------------------------------------------------------------------#

# how to add load balancer in httpd or apache

# now open again /etc/httpd/conf.d/mywebsite2.conf change something

<VirtualHost *:80>
ServerName mywebpage2.com
ServerAlias www.mywebpage2.com
DocumentRoot /var/www/<new_folder>

DirectoryIndex index.html
# for custom error page
ErrorDocument 404 /error_404.html

<Proxy "balancer://mycluster/"
    BalancerMember http://<ip>:<port>
    BalancerMember http://<ip>:<port>
    ProxySet lbmethod=byrequests 
</Proxy>

ProxyPass "/" "balancer://mycluster/"
ProxyPassReverse "/" "balancer://mycluster/"

# for custom log
ErrorLog /var/log/httpd/site_error.log
Custom /var/log/httpd/site_access.log combined
</VirtualHost>

# in load balancer it use 4 method to balance
# Byrequests - it use request counting to load balance.
# Bytraffic - it use weighted traffic counting to distribute balance.
# Bybusyness - track of how many request each worker is assigned at present.
# Heartbeat - it follow heartbeat traffic counting to distribute load.
